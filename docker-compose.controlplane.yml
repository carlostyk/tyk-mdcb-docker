version: '3.9'
services:

  tyk-postgres:
    image: postgres:latest
    container_name: tyk-postgres
    environment:
      - POSTGRES_DB=tyk_analytics
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=topsecretpassword
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - tyk

  tyk-dashboard:
    image: tykio/tyk-dashboard:v5.5
    container_name: tyk-dashboard
    environment:
      - TYK_DB_LICENSEKEY=${TYK_DB_LICENSEKEY}
      - TYK_DB_ADMINSECRET=${TYK_DB_ADMINSECRET}
    depends_on:
      tyk-postgres:
        condition: service_healthy
    ports:
      - "3000:3000"
    env_file:
      - ./confs/tyk_analytics.env
    volumes:
      - dashboard-data:/opt/tyk-dashboard
    networks:
      - tyk

  tyk-gateway:
    image: tykio/tyk-gateway:v5.5
    container_name: tyk-gateway
    ports:
      - "8080:8080"
    env_file:
      - ./confs/tyk.env
    volumes:
      - gateway-data:/opt/tyk-gateway
    networks:
      - tyk

  tyk-redis:
    image: redis
    container_name: tyk-redis
    ports:
      - "6380:6379"
    volumes:
      - redis-data:/data
    networks:
      - tyk

  tyk-mdcb:
    image: tykio/tyk-mdcb-docker:v2.7
    container_name: tyk-mdcb
    environment:
      - TYK_MDCB_LICENSE=${TYK_MDCB_LICENSE}
      - TYK_MDCB_SECURITY_PRIVATECERTIFICATEENCODINGSECRET=12345
    ports:
      - "9090:9090"
      - "8181:8181"
      - "9191:9191"
    volumes:
      - ./confs/tyk-mdcb.conf:/opt/tyk-sink/tyk_sink.conf
      - mdcb-data:/opt/tyk-sink
    env_file:
      - ./confs/tyk-mdcb.env
    networks:
      - tyk

volumes:
  postgres-data:
  redis-data:
  dashboard-data:
  gateway-data:
  mdcb-data:

networks:
  tyk:
